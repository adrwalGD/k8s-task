{{- if .Values.loadgenerator.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.loadgenerator.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.loadgenerator.name }}
spec:
  replicas: {{ .Values.loadgenerator.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.loadgenerator.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.loadgenerator.name }}
    spec:
      serviceAccountName: {{ .Values.loadgenerator.name }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
        {{- with .Values.loadgenerator.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecretName }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
      initContainers:
      - name: {{ .Values.loadgenerator.name }}-check
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: busybox:latest
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        command:
        - /bin/sh
        - -exc
        - |
          MAX_RETRIES=12
          RETRY_INTERVAL=10
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
            STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
            if [ $STATUSCODE -eq 200 ]; then
                echo "Frontend is reachable."
                exit 0
            fi
            echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
            sleep $RETRY_INTERVAL
          done
          echo "Failed to reach frontend after $MAX_RETRIES attempts."
          exit 1
      containers:
        - name: {{ .Values.loadgenerator.name }}
          image: "{{ .Values.loadgenerator.image.repository }}:{{ .Values.loadgenerator.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          resources:
            {{- toYaml .Values.loadgenerator.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.global.containerSecurityContext | nindent 12 }}
            {{- with .Values.loadgenerator.containerSecurityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            {{- toYaml .Values.loadgenerator.env | nindent 12 }}
{{- end }}
